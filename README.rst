=============
pyRsyncBackup
=============

.. epigraph::
    *Нет, не красота, резервное копирование спасёт мир!*

    -- Неизвестно 28.09.2008

Утилита резервного копирования данных на основе **rsync**.

**Проект находится на стадии РАЗРАБОТКИ!!!**

Настройка
=========
Конфигурационный файл расположен в `/etc/pyRsyncBackup/pyRsyncBackup.conf`,
формат файла *Microsoft Windows INI*.

Подготовка Базы Данных
----------------------
Для работы используется база данных PostgreSQL.

1. Создаем пользователя
    CREATE ROLE "pyRsyncBackup" NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN PASSWORD '123456';

2. Создаем базу данных
    CREATE DATABASE pyRsyncBackup OWNER "pyRsyncBackup" ENCODING 'UTF8';

Секция Main
-----------
* DataBaseFile - файл размещения данных по хостам резервного копирования.
* HostList - директория расположения конфигураций хостов резервного копирования.
* Threads - количество потоков обработки.

Секция Logging
--------------
* Dir - расположение log файлов
* Level - уровень логирования
* Count - количество ротаций log файлов
* Size - размер файлов ротации

Модули резервного копирования
-----------------------------
Модули резервного копирования определяют собой отдельные секции с набором параметров

* path - путь резервного копирования на удаленном сервере
* exclude - список исключений, формат rsync, поддерживает указание как патернов(через символ ',' - запятая) так и путь до файла содержащего патерны.
* include - список обязательных включений, формат rsync, поддерживает указание как патернов(через символ ',' - запятая) так и путь до файла содержащего патерны.

Пример::

    [test1]
    path = /opt/test1
    exclude = *.log

Настройка хостов
================
При запуске приложения файлы с расширением *cfg, conf* из директории **HostList** вычитываются и формируется список хостов.
Формат файлов *Microsoft Windows INI*.

Секиця Main
-----------
* BackupDirectory - директория куда будут сложены резервные копии(путь по следующему патерну backup_directory/host.name/module.name)
* BackupInterval - интервал резервного копирования, в секундах, поддерживает суффиксы m - минута, h - часы, d - дни.
* DiscoveringInterval - интервал обнаружения модулей и хостов, поддерживает суффиксы m - минута, h - часы, d - дни.
* *User* - пользователь(не обязательное)
* *PasswordFile* - файл содержищий пароль User(не обязательное, должень иметь права 400).

Секция Proxy
------------
**Данная секиция не обязательная**

* ip - IP адрес промежуточного сервера
* login - login ssh промежуточного сервера
* password - пароль промежуточного сервера.

Секция Host
-----------
Секиция заполняется по следующему шаблону

    host.name = ip=ip_address [BackupDirectory=] [BackupInterval=] [DiscoveringInterval=] [User=] [PasswordFile=]

Принцип работы
==============
После запуска приложения начинает инициализироваться **DataBaseFile** - который является управляющим всего приложения.

* Формируется список хостов.
* Формируется список прокси серверов
* Формируется список модулей резервного копирования

После инициализации, приложение уходит в бесконечный цикл, который прерывается сигналами SIGTERM и SIGINT.

В цикле выполняются следующие операции

* **Авто обнаружение** - поиск доступных модулей на хостах, частота поиска определяется настройкой **DiscoveringInterval**
* **Резервное копирование** - резервное копирования на основе данных автообнаружения, частота определяется настройкой **BackupInterval**


P.S.
====
Ногами сильно не пинать, я всего лишь *компьютерщик* ;)
